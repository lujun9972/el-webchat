#+TITLE: README
#+AUTHOR: DarkSun
#+CATEGORY: el-webchat
#+DATE: [2015-08-27 周四 18:45]
#+OPTIONS: ^:{}

* el-webchat介绍
这是一款基于elnode的简易聊天室实现. 

[[file:screen-1.jpg]]

* Requirment
1. 使用package安装elnode
2. 使用package安装htmlize
* 单一聊天室的使用方法
最简单的使用方式是启动一个webchat-server,让所有人都在同一个聊天室内交流. 
** 启动server端
webchat-server.el为实现server端的代码,其支持以emacs script的方式直接调用. 方式为:
#+BEGIN_SRC sh
  # 給webchat-server.el添加执行权限
  chmod +x webchat-server.el

  # 执行该文件,带一个端口参数,表示该服务监听哪个端口
  webchat-server.el 8000

  # 若为windows环境,则可以执行以下命令
  emacs.exe --script webchat-server.el 8000
#+END_SRC

** 启动client端
目前client端提供两种方式的实现,一种是客户端主动向server端拉取聊天内容的方式,实现文件为`webchat-talk.el'.

还有一种实现是server端在有新的聊天内容时向client端推送聊天内容,实现文件为`webchat-talk-push.el'

无论是哪种实现方式,启动client端的方式都是

1. 加载client端实现文件
   #+BEGIN_SRC emacs-lisp
     (require 'webchat-client)
     ;; 或
     (require 'webchat-client-push)
   #+END_SRC
2. 调用命令 M-x webchat-talk
3. 在弹出的*webchat-talk* buffer中输入内容,并按C-RET发送内容. 聊天内容会显示在*webchat-content*中

* 多聊天室的使用方式
在webchat-server之上,封装了一层webchat-server-dispatcher,使得交流着可以根据不同的主题进入不同的聊天室.
** 启动server端
1. 加载webchat-server-dispatcher.el
   #+BEGIN_SRC emacs-lisp
     (require 'webchat-server-dispatcher)
   #+END_SRC
2. 调用命令M-x webchat-server-dispatcher,并输入监听端口
** 启动client端
1. 加载client端实现文件
   #+BEGIN_SRC emacs-lisp
     (require 'webchat-client)
     ;; 或
     (require 'webchat-client-push)
   #+END_SRC
2. 调用命令 M-x webchat-client
3. 在弹出的*webchat-talk* buffer中输入内容,并按C-RET发送内容. 聊天内容会显示在*webchat-content*中
* TODOS
+ [ ] 可以在客户端自由添加channel
+ [X] 高亮代码
+ [X] 显示图片
  [[file:screen2.jpeg]]
+ [ ] 提供方法上传图片
+ [ ] 改为不再基于elnode
